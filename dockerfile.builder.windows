# SageAttention Builder - Windows Container Multi-stage build for SageAttention wheels
# Supports Windows with multiple PyTorch versions

# Build arguments for version flexibility
ARG TORCH_CUDA_ARCH_LIST="8.0;8.6;8.9;9.0;12.0"

# Stage 1: SageAttention Builder
FROM mcr.microsoft.com/powershell:7.4-windowsservercore-ltsc2022 AS sageattention-builder

# Declare build arguments
ARG CUDA_VERSION
ARG PYTHON_VERSION
ARG TORCH_VERSION
ARG TORCH_CUDA_ARCH_LIST

# Set environment variables from ARGs
ENV CUDA_HOME="C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v${CUDA_VERSION}"
ENV PATH="%CUDA_HOME%\\bin;%PATH%"
ENV PYTHONUNBUFFERED=1
ENV TORCH_CUDA_ARCH_LIST=${TORCH_CUDA_ARCH_LIST}
ENV TORCH_VERSION=${TORCH_VERSION}
ENV PYTHON_VERSION=${PYTHON_VERSION}
ENV CUDA_VERSION=${CUDA_VERSION}

# Install Chocolatey and Python in one step to avoid PATH issues
RUN C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -Command \
    Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')); \
    $env:PATH = \"C:\\ProgramData\\chocolatey\\bin;$env:PATH\"; \
    choco install -y python --version=3.12 visualstudio2019buildtools git

# Add Chocolatey to PATH for subsequent commands
ENV PATH=C:\ProgramData\chocolatey\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\

# Refresh environment variables  
RUN C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -Command "refreshenv"

# Create virtual environment (cached layer)
RUN python -m venv C:\\opt\\venv
ENV PATH=C:\\opt\\venv\\Scripts;%PATH%

# Upgrade pip and install build tools (cached layer)
RUN python -m pip install --upgrade pip setuptools wheel packaging

# Install PyTorch with appropriate CUDA support (cached layer)
RUN C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -Command \
    if ($env:CUDA_VERSION -eq '12.8.1') { \
        python -m pip install torch==$env:TORCH_VERSION torchvision --index-url https://download.pytorch.org/whl/cu128 \
    } else { \
        python -m pip install torch==$env:TORCH_VERSION torchvision --index-url https://download.pytorch.org/whl/cu129 \
    }

# Copy only dependency files first (cached layer for dependencies)
WORKDIR C:\\build
COPY pyproject.toml setup.py update_pyproject.py ./

# Install SageAttention build dependencies (cached layer)
RUN python -m pip install -e .

# Copy the local SageAttention source code (changes invalidate cache)
COPY . C:\\build\\SageAttention
WORKDIR C:\\build\\SageAttention

# Update pyproject.toml with correct PyTorch version
RUN python update_pyproject.py

# Build SageAttention wheel (changes invalidate cache)
RUN python setup.py bdist_wheel

# Stage 2: Wheel extraction
FROM scratch AS sageattention-wheel
COPY --from=sageattention-builder C:\\build\\SageAttention\\dist\\*.whl C:\\wheels\\

# Stage 3: Runtime verification
# Re-declare ARGs for test stage
ARG CUDA_VERSION
ARG TORCH_VERSION
ARG PYTHON_VERSION

FROM mcr.microsoft.com/powershell:7.4-windowsservercore-ltsc2022 AS sageattention-test

# Re-declare ARGs after FROM (required for Docker multi-stage builds)
ARG TORCH_VERSION
ARG PYTHON_VERSION
ARG CUDA_VERSION

# Set environment variables from ARGs for test stage
ENV TORCH_VERSION=${TORCH_VERSION}
ENV PYTHON_VERSION=${PYTHON_VERSION}
ENV CUDA_VERSION=${CUDA_VERSION}

# Install Chocolatey and Python for testing in one step
RUN C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -Command \
    Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')); \
    $env:PATH = \"C:\\ProgramData\\chocolatey\\bin;$env:PATH\"; \
    choco install -y python --version=3.12

# Add Chocolatey to PATH for test stage
ENV PATH=C:\ProgramData\chocolatey\bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\

# Refresh environment variables  
RUN C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -Command "refreshenv"

# Create virtual environment
RUN python -m venv C:\\opt\\venv
ENV PATH=C:\\opt\\venv\\Scripts;%PATH%

# Install PyTorch and test the built wheel
RUN C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -Command \
    if ($env:CUDA_VERSION -eq '12.8.1') { \
        python -m pip install torch==$env:TORCH_VERSION torchvision --index-url https://download.pytorch.org/whl/cu128 \
    } else { \
        python -m pip install torch==$env:TORCH_VERSION torchvision --index-url https://download.pytorch.org/whl/cu129 \
    }

# Copy and install the built wheel from wheel stage
COPY --from=sageattention-wheel C:\\wheels\\*.whl C:\\tmp\\
RUN python -m pip install C:\\tmp\\*.whl

# Test SageAttention import
RUN python -c "import sageattention; print('SageAttention imported successfully')"
