# SageAttention Builder - Optimized Windows multi-stage build for SageAttention wheels
# Supports Windows with multiple PyTorch versions using shared dependencies

# Build arguments for version flexibility
ARG CUDA_VERSION
ARG PYTHON_VERSION=3.12
ARG TORCH_VERSION
ARG TORCH_CUDA_ARCH_LIST="8.0;8.6;8.9;9.0;12.0"

# Stage 1: Base environment with system dependencies
FROM mcr.microsoft.com/powershell:7.4-windowsservercore-ltsc2022 AS base-environment

# Set environment variables
ENV CUDA_HOME="C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v${CUDA_VERSION}"
ENV PATH="%CUDA_HOME%\\bin;%PATH%"
ENV PYTHONUNBUFFERED=1

# Install Chocolatey and system dependencies (cached layer)
RUN C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Command \
    Set-ExecutionPolicy Bypass -Scope Process -Force; \
    [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; \
    iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1')); \
    $env:PATH = \"C:\\ProgramData\\chocolatey\\bin;$env:PATH\"; \
    choco install -y python --version=3.12.8; \
    choco install -y visualstudio2019buildtools git

# Add tools to PATH (cached layer)
ENV PATH=C:\\ProgramData\\chocolatey\\bin;C:\\Python312;C:\\Python312\\Scripts;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\

# Create virtual environment (cached layer)
RUN python -m venv C:\\opt\\venv
ENV PATH=C:\\opt\\venv\\Scripts;C:\\ProgramData\\chocolatey\\bin;C:\\Python312;C:\\Python312\\Scripts;C:\\Windows\\system32;C:\\Windows;C:\\Windows\\System32\\Wbem;C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\

# Upgrade pip and install build tools (cached layer)
RUN python -m pip install --upgrade pip setuptools wheel packaging

# Stage 2: PyTorch dependency layer
FROM base-environment AS pytorch-environment

# Re-declare ARGs after FROM
ARG CUDA_VERSION
ARG TORCH_VERSION

# Set environment variables
ENV TORCH_VERSION=${TORCH_VERSION}
ENV CUDA_VERSION=${CUDA_VERSION}

# Install PyTorch (cached layer, only rebuilds if versions change)
RUN C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe -Command \
    if ($env:CUDA_VERSION -eq '12.8.1') { \
        python -m pip install torch==$env:TORCH_VERSION torchvision --index-url https://download.pytorch.org/whl/cu128 \
    } else { \
        python -m pip install torch==$env:TORCH_VERSION torchvision --index-url https://download.pytorch.org/whl/cu129 \
    }

# Stage 3: SageAttention builder
FROM pytorch-environment AS sageattention-builder

# Re-declare all ARGs for this stage
ARG TORCH_VERSION
ARG PYTHON_VERSION
ARG TORCH_CUDA_ARCH_LIST

# Set environment variables
ENV TORCH_CUDA_ARCH_LIST=${TORCH_CUDA_ARCH_LIST}
ENV PYTHON_VERSION=${PYTHON_VERSION}

# Copy dependency files first for better caching
WORKDIR C:\\build
COPY pyproject.toml setup.py update_pyproject.py simpleindex.toml ./

# Update pyproject.toml with correct PyTorch version
RUN python update_pyproject.py

# Install SageAttention build dependencies (cached if dependencies unchanged)
RUN python -m pip install -e .

# Copy the local SageAttention source code (invalidates cache only when source changes)
COPY . C:\\build\\SageAttention
WORKDIR C:\\build\\SageAttention

# Build SageAttention wheel
RUN python setup.py bdist_wheel

# Stage 4: Wheel extraction (minimal, just copy the wheel)
FROM pytorch-environment AS sageattention-wheel
WORKDIR C:\\wheels
COPY --from=sageattention-builder C:\\build\\SageAttention\\dist\\*.whl .\\
RUN powershell -Command "Get-ChildItem -Name; Write-Host 'Wheel extracted successfully'"

# Stage 5: Runtime verification (reuses pytorch-environment)
FROM pytorch-environment AS sageattention-test

# Re-declare ARGs for test stage
ARG TORCH_VERSION
ARG PYTHON_VERSION
ARG CUDA_VERSION

# Set environment variables
ENV TORCH_VERSION=${TORCH_VERSION}
ENV PYTHON_VERSION=${PYTHON_VERSION}
ENV CUDA_VERSION=${CUDA_VERSION}

# Copy and install the built wheel (PyTorch already installed from base)
COPY --from=sageattention-wheel C:\\wheels\\*.whl C:\\tmp\\
RUN python -m pip install C:\\tmp\\*.whl \
    && Remove-Item -Path C:\\tmp\\*.whl -Force

# Test SageAttention import
RUN python -c "import sageattention; print('SageAttention imported successfully')"