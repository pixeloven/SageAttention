name: CI - Build, Test, and Publish SageAttention Wheels

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-wheel:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda-version: [12.9.1]
        python-version: [3.12]
        torch-version: [2.7.0]
        include:
          - cuda-version: 12.9.1
            python-version: 3.12
            cuda-arch-list: "7.0;7.5;8.0;8.6;8.9;9.0"
            torch-minor-version: 7
            torch-patch-version: 0
            cuda-minor-version: 9
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Free Disk Space
      uses: jlumbroso/free-disk-space@main
      with:
        # Keep tool cache since we need Python and build tools
        tool-cache: false
        # Remove other large packages we don't need
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Build wheel using docker-bake
      run: |
        docker buildx bake --file docker-bake.hcl \
          --set "*.args.CUDA_VERSION=${{ matrix.cuda-version }}" \
          --set "*.args.PYTHON_VERSION=${{ matrix.python-version }}" \
          --set "*.args.TORCH_CUDA_ARCH_LIST=${{ matrix.cuda-arch-list }}" \
          --set "*.args.TORCH_MINOR_VERSION=${{ matrix.torch-minor-version }}" \
          --set "*.args.TORCH_PATCH_VERSION=${{ matrix.torch-patch-version }}" \
          --set "*.args.CUDA_MINOR_VERSION=${{ matrix.cuda-minor-version }}"

    - name: Rename wheel with proper naming convention
      run: |
        cd wheels/wheels
        for wheel in *.whl; do
          if [[ -f "$wheel" ]]; then
            # Extract version from wheel name
            version=$(echo "$wheel" | sed -n 's/sageattention-\([^-]*\)-.*/\1/p')
            # Generate wheel suffix dynamically
            wheel_suffix="cu${{ matrix.cuda-minor-version }}9torch${{ matrix.torch-minor-version }}${{ matrix.torch-patch-version }}"
            # Create new name with proper convention
            python_version_clean=$(echo ${{ matrix.python-version }} | tr -d '.')
            new_name="sageattention-${version}+${wheel_suffix}-cp${python_version_clean}-cp${python_version_clean}-linux_x86_64.whl"
            mv "$wheel" "$new_name"
            echo "Renamed $wheel to $new_name"
          fi
        done

    - name: Test wheel using Docker
      run: |
        docker buildx bake --file docker-bake.hcl test \
          --set "*.args.CUDA_VERSION=${{ matrix.cuda-version }}" \
          --set "*.args.PYTHON_VERSION=${{ matrix.python-version }}" \
          --set "*.args.TORCH_CUDA_ARCH_LIST=${{ matrix.cuda-arch-list }}" \
          --set "*.args.TORCH_MINOR_VERSION=${{ matrix.torch-minor-version }}" \
          --set "*.args.TORCH_PATCH_VERSION=${{ matrix.torch-patch-version }}" \
          --set "*.args.CUDA_MINOR_VERSION=${{ matrix.cuda-minor-version }}"

    - name: Upload wheel artifacts
      uses: actions/upload-artifact@v4
      with:
        name: sageattention-wheel
        path: wheels/wheels/*.whl
        retention-days: 7

  publish-wheel:
    needs: build-wheel
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download wheel artifacts
      uses: actions/download-artifact@v4
      with:
        name: sageattention-wheel

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install twine
      run: |
        pip install twine

    - name: Create PyPI configuration
      run: |
        cat > ~/.pypirc << EOF
        [distutils]
        index-servers =
            github
        
        [github]
        repository = https://github.com/${{ github.repository }}/packages/pypi
        username = ${{ github.actor }}
        password = ${{ secrets.GITHUB_TOKEN }}
        EOF

    - name: Publish to GitHub Packages
      run: |
        cd wheels
        for wheel in *.whl; do
          if [[ -f "$wheel" ]]; then
            echo "Uploading $wheel to GitHub Packages..."
            twine upload --repository github "$wheel"
          fi
        done

 