# SageAttention Builder - Multi-platform multi-stage build for SageAttention wheels
# Supports Linux with multiple PyTorch versions

# Declare build arguments that are used in FROM statements
ARG CUDA_VERSION

# Use NVIDIA CUDA base image with cuDNN development libraries
FROM nvidia/cuda:${CUDA_VERSION}-cudnn-devel-ubuntu24.04 AS sageattention-builder

# Declare remaining build arguments
ARG PYTHON_VERSION
ARG TORCH_VERSION
ARG TORCH_CUDA_ARCH_LIST

# Set environment variables from ARGs
ENV DEBIAN_FRONTEND=noninteractive
ENV CUDA_HOME=/usr/local/cuda
ENV PATH=$CUDA_HOME/bin:$PATH
ENV LD_LIBRARY_PATH=$CUDA_HOME/lib64:$LD_LIBRARY_PATH
ENV PYTHONUNBUFFERED=1
ENV TORCH_CUDA_ARCH_LIST=${TORCH_CUDA_ARCH_LIST}
ENV TORCH_VERSION=${TORCH_VERSION}
ENV PYTHON_VERSION=${PYTHON_VERSION}
ENV CUDA_VERSION=${CUDA_VERSION}

# Verify ARG values are passed through
RUN echo "TORCH_VERSION: ${TORCH_VERSION}" && \
    echo "PYTHON_VERSION: ${PYTHON_VERSION}" && \
    echo "CUDA_VERSION: ${CUDA_VERSION}" && \
    echo "TORCH_CUDA_ARCH_LIST: ${TORCH_CUDA_ARCH_LIST}"

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-dev \
    python3-venv \
    python3-pip \
    build-essential \
    git \
    wget \
    curl \
    ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip and install build tools
RUN pip install --upgrade pip setuptools wheel packaging

# Install PyTorch with appropriate CUDA support
RUN if [ "$CUDA_VERSION" = "12.8.1" ]; then \
        pip install torch==${TORCH_VERSION} torchvision --index-url https://download.pytorch.org/whl/cu128; \
    else \
        pip install torch==${TORCH_VERSION} torchvision --index-url https://download.pytorch.org/whl/cu129; \
    fi

# Copy the local SageAttention source code
WORKDIR /build
COPY . /build/SageAttention/
WORKDIR /build/SageAttention

# Update pyproject.toml with correct PyTorch version
RUN python update_pyproject.py

# Install SageAttention build dependencies
RUN pip install -e .

# Build SageAttention wheel
RUN python setup.py bdist_wheel

# Stage 2: Wheel extraction and storage
FROM alpine:latest AS sageattention-wheel
RUN apk add --no-cache bash
WORKDIR /wheels
COPY --from=sageattention-builder /build/SageAttention/dist/*.whl ./
RUN ls -la && echo "Wheel extracted successfully"

# Stage 3: Runtime verification
# CUDA_VERSION ARG is already declared above
FROM nvidia/cuda:${CUDA_VERSION}-base-ubuntu24.04 AS sageattention-test

# Install Python and PyTorch for testing
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-venv \
    python3-pip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install PyTorch and test the built wheel
RUN if [ "$CUDA_VERSION" = "12.8.1" ]; then \
        pip install torch==${TORCH_VERSION} torchvision --index-url https://download.pytorch.org/whl/cu128; \
    else \
        pip install torch==${TORCH_VERSION} torchvision --index-url https://download.pytorch.org/whl/cu129; \
    fi

# Copy and install the built wheel from wheel stage
COPY --from=sageattention-wheel /wheels/*.whl /tmp/
RUN pip install /tmp/*.whl

# Test SageAttention import
RUN python -c "import sageattention; print('SageAttention imported successfully')"
